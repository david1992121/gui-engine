# Generated by Django 3.1.3 on 2020-12-22 19:10

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basics', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True, verbose_name='メールアドレス')),
                ('social_type', models.IntegerField(choices=[(0, 'email'), (1, 'line'), (2, 'phone')], default=0, verbose_name='ソーシャルタイプ')),
                ('social_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ソーシャルID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='電話番号')),
                ('nickname', models.CharField(blank=True, max_length=190, null=True, verbose_name='ニックネーム')),
                ('is_registered', models.BooleanField(default=False, verbose_name='初期登録')),
                ('is_verified', models.BooleanField(default=False, verbose_name='メール確認')),
                ('verify_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='認証コード')),
                ('birthday', models.DateTimeField(blank=True, null=True, verbose_name='誕生日')),
                ('word', models.CharField(default='', max_length=190, verbose_name='今日のひとこと')),
                ('point', models.IntegerField(default=0, verbose_name='ポイント')),
                ('role', models.IntegerField(choices=[(-1, 'admin'), (0, 'cast'), (1, 'guest'), (10, 'applier')], default=1, verbose_name='ユーザーロール')),
                ('status', models.BooleanField(default=False, verbose_name='オンライン')),
                ('left_at', models.DateTimeField(blank=True, null=True, verbose_name='オフライン日時')),
                ('is_joining', models.BooleanField(default=False, verbose_name='合流中')),
                ('inviter_code', models.CharField(blank=True, max_length=7, null=True, unique=True, verbose_name='紹介者コード')),
                ('is_public', models.BooleanField(default=True, verbose_name='プロフィール公開')),
                ('point_used', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='利用ポイント')),
                ('call_times', models.IntegerField(default=0, verbose_name='合流利用回数')),
                ('group_times', models.IntegerField(default=0, verbose_name='グループ回数')),
                ('private_times', models.IntegerField(default=0, verbose_name='プライベート回数')),
                ('is_introducer', models.BooleanField(default=False, verbose_name='紹介者')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='登録日時')),
                ('point_half', models.IntegerField(default=3000, validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(1000)], verbose_name='30分あたりのポイント')),
                ('video_point_half', models.IntegerField(default=3000, validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(1000)], verbose_name='ビデオオーダー料金')),
                ('is_applied', models.BooleanField(default=False, verbose_name='キャスト応募')),
                ('is_present', models.BooleanField(default=False, verbose_name='出勤')),
                ('presented_at', models.DateTimeField(null=True, verbose_name='待機修了時間')),
                ('back_ratio', models.IntegerField(default=75, verbose_name='バック率')),
                ('expire_amount', models.IntegerField(default=0, verbose_name='延長時間')),
                ('expire_times', models.IntegerField(default=0, verbose_name='延長回数')),
                ('memo', models.CharField(default='', max_length=190, verbose_name='メモ')),
                ('axes_exist', models.BooleanField(default=False, verbose_name='クレカ登録')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
            },
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, default='', null=True, verbose_name='自己紹介')),
                ('residence', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='居住地')),
                ('birthplace', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='出身地')),
                ('qualification', models.IntegerField(choices=[(0, '未定'), (1, '中卒'), (2, '高卒'), (3, '大卒'), (4, '大学院卒'), (5, '専門卒'), (6, 'その他')], default=0, verbose_name='学歴')),
                ('annual', models.IntegerField(choices=[(0, '未定'), (1, '500万以下'), (2, '500万～1000万'), (3, '1000万～1500万'), (4, '1500万～2000万'), (5, '2000万～3000万'), (6, '3000万～5000万'), (7, '5000万～1億'), (8, '1億以上')], default=0, verbose_name='年収')),
                ('job', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='お仕事')),
                ('favorite', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='よく飲む地域')),
                ('drink', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='お酒')),
                ('smoke', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='タバコ')),
                ('sibling', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='兄弟姉妹')),
                ('housemate', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='同居人')),
                ('language', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='外国語')),
                ('height', models.CharField(blank=True, default='', max_length=3, null=True, verbose_name='身長')),
                ('guest_style', models.IntegerField(choices=[(0, '未定'), (1, '細身'), (2, '普通'), (3, 'ガッチリ'), (4, 'ぽっちゃり'), (5, '太め')], default=0, verbose_name='ゲストスタイル')),
                ('cast_style', models.IntegerField(choices=[(0, '未定'), (1, '細身'), (2, '普通'), (3, 'グラマラス')], default=0, verbose_name='キャストスタイル')),
                ('hair', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='髪色・髪型')),
                ('entertainment', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='似ている芸能人')),
                ('charm', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='チャームポイント')),
                ('girl_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='好きな女性のタイプ')),
                ('costume', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='好きな服装')),
                ('dislike', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='こういうタイプはNG')),
                ('character', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='性格')),
                ('talk_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='話し上手？聞き上手？')),
                ('want_type', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='こんな話を話したい・聞きたい')),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format='JPEG', keep_meta=True, null=True, quality=75, size=[400, 400], upload_to='static/images', verbose_name='URI')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('category', models.IntegerField(choices=[(0, '全て'), (1, 'キャストのみ')], default=0, verbose_name='キャストのみ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('images', models.ManyToManyField(to='accounts.Media', verbose_name='画像')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransferInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(default='', max_length=190, verbose_name='銀行名')),
                ('bank_no', models.CharField(default='', max_length=190, verbose_name='金融機関番号')),
                ('site_name', models.CharField(default='', max_length=190, verbose_name='支店名')),
                ('site_no', models.CharField(default='', max_length=190, verbose_name='支店番号')),
                ('account_no', models.CharField(default='', max_length=190, verbose_name='口座番号')),
                ('account_cat', models.IntegerField(choices=[(0, '通常'), (1, '当座')], default=0, verbose_name='口座種別')),
                ('transfer_name', models.CharField(default='', max_length=190, verbose_name='名義')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_infos', to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
        ),
        migrations.CreateModel(
            name='TransferApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, '未処理'), (1, '処理済み')], default=0, verbose_name='ステータス')),
                ('amount', models.IntegerField(default=0, verbose_name='現金')),
                ('apply_type', models.IntegerField(choices=[(0, '通常入金'), (1, 'すぐ入金')], verbose_name='種別')),
                ('currency_type', models.CharField(default='', max_length=190, verbose_name='通貨種別')),
                ('point', models.IntegerField(default=0, verbose_name='ポイント')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='申請日時')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basics.location', verbose_name='支店')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_applications', to=settings.AUTH_USER_MODEL, verbose_name='対象者')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='avatars',
            field=models.ManyToManyField(related_name='avatar', to='accounts.Media', verbose_name='アバタ'),
        ),
        migrations.AddField(
            model_name='member',
            name='cast_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basics.castclass'),
        ),
        migrations.AddField(
            model_name='member',
            name='cast_status',
            field=models.ManyToManyField(to='basics.Choice', verbose_name='ステータス'),
        ),
        migrations.AddField(
            model_name='member',
            name='detail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.detail'),
        ),
        migrations.AddField(
            model_name='member',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='member',
            name='guest_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basics.guestlevel'),
        ),
        migrations.AddField(
            model_name='member',
            name='introducer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intros', to=settings.AUTH_USER_MODEL, verbose_name='紹介者'),
        ),
        migrations.AddField(
            model_name='member',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basics.location', verbose_name='地域'),
        ),
        migrations.AddField(
            model_name='member',
            name='setting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basics.setting'),
        ),
        migrations.AddField(
            model_name='member',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('favorite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='イイネ先')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='イイネ元')),
            ],
            options={
                'verbose_name': 'フォロー関係',
                'verbose_name_plural': 'フォロー関係',
                'unique_together': {('follower', 'favorite')},
            },
        ),
        migrations.CreateModel(
            name='FavoriteTweet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('liker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tweet_favorites', to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
                ('tweet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tweet_likers', to='accounts.tweet', verbose_name='つぶやき')),
            ],
            options={
                'verbose_name': 'つぶやき-イイネ関係',
                'verbose_name_plural': 'つぶやき-イイネ関係',
                'unique_together': {('liker', 'tweet')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together={('social_type', 'social_id')},
        ),
    ]
