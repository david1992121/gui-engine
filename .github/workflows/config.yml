name: Build CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9.0]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: db_gui
        ports: ['3306:3306']

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        env:
          DEBUG: off
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SITE_URL: ${{ secrets.SITE_URL }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          EMAIL_FROM_USER: ${{ secrets.EMAIL_FROM_USER }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
          LINE_CLIENT_ID: ${{ secrets.LINE_CLIENT_ID }}
          LINE_CLIENT_SECRET: ${{ secrets.LINE_CLIENT_SECRET }}
          LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRE }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKE }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
        run: python manage.py migrate
      - name: 'Run PEP8'
        uses: quentinguidee/pep8-action@v1
        with:
          arguments: '--max-line-length=120 --ignore=E501'
      - name: Run Tests
        env:
          DEBUG: off
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SITE_URL: ${{ secrets.SITE_URL }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          EMAIL_FROM_USER: ${{ secrets.EMAIL_FROM_USER }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
          LINE_CLIENT_ID: ${{ secrets.LINE_CLIENT_ID }}
          LINE_CLIENT_SECRET: ${{ secrets.LINE_CLIENT_SECRET }}
          LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRE }}
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKE }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
        run: |
          python manage.py test
